@page "/todos"
@using Microsoft.Identity.Web
@using Microsoft.Graph
@inject Microsoft.Graph.GraphServiceClient GraphServiceClient
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler

<div class="bg-blue-300 flex flex-grow flex-row">

    <div class="bg-gray-900 text-white flex flex-col gap-1 w-[300px]">
        @if (todoTaskList is not null)
        {
                @foreach (var todo in todoTaskList)
                {
                    <div class="flex gap-3 hover:bg-gray-700 hover:cursor-pointer py-2 px-2">
                        <svg width="24" height="24" fill="none" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M3.5 16.5a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4 .5h13.503a1 1 0 0 1 .117 1.993l-.117.007H7.5a1 1 0 0 1-.116-1.993L7.5 17h13.503H7.5Zm-4-6.5a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm4 .5h13.503a1 1 0 0 1 .117 1.993l-.117.007H7.5a1 1 0 0 1-.116-1.993L7.5 11h13.503H7.5Zm-4-6.492a1.5 1.5 0 1 1 0 2.999 1.5 1.5 0 0 1 0-3ZM7.5 5h13.503a1 1 0 0 1 .117 1.993l-.117.007H7.5a1 1 0 0 1-.116-1.994l.116-.006h13.503H7.5Z" fill="#ffffff"/></svg>
                        <h2 class="truncate">@todo.DisplayName</h2>
                    </div>

                    @* if(todo.Tasks is not null){
                        foreach(var task in todo.Tasks){
                            <h3>@task.Title</h3>
                            <h3>@task.Status</h3>
                            }
                        } 
                    *@
                }
        }else{
            <div class="text-center mx-auto my-auto font-bold text-3xl">
                <p>Loading</p>
            </div>
        }
    </div>

    <div class="flex flex-col flex-grow bg-gray-800 p-3 text-white">
        <h1>tasks</h1>
    </div>
</div>

@code {
    ITodoListsCollectionPage? todoTaskList;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            todoTaskList = await GraphServiceClient.Me.Todo.Lists.Request().GetAsync();
            foreach (var item in todoTaskList)
            {
                var tasks = await GraphServiceClient.Me
                .Todo
                .Lists[item.Id]
                .Tasks
                .Request()
                .GetAsync();
                tasks.ToList();
                item.Tasks = tasks;
            }
        }
        catch (Exception ex)
        {
            ConsentHandler.HandleException(ex);
        }
    }
}
